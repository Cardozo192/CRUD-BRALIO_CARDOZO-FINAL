// Generated by view binder compiler. Do not edit!
package dev.cardoso.quotesmvvm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import dev.cardoso.quotesmvvm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class QuoteItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Button btnItemDelete;

  @NonNull
  public final Button btnItemEdit;

  @NonNull
  public final TextView textViewOptions;

  @NonNull
  public final TextView tvItemAuthor;

  @NonNull
  public final TextView tvItemQuote;

  private QuoteItemBinding(@NonNull MaterialCardView rootView, @NonNull Button btnItemDelete,
      @NonNull Button btnItemEdit, @NonNull TextView textViewOptions,
      @NonNull TextView tvItemAuthor, @NonNull TextView tvItemQuote) {
    this.rootView = rootView;
    this.btnItemDelete = btnItemDelete;
    this.btnItemEdit = btnItemEdit;
    this.textViewOptions = textViewOptions;
    this.tvItemAuthor = tvItemAuthor;
    this.tvItemQuote = tvItemQuote;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static QuoteItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QuoteItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.quote_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QuoteItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnItemDelete;
      Button btnItemDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnItemDelete == null) {
        break missingId;
      }

      id = R.id.btnItemEdit;
      Button btnItemEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnItemEdit == null) {
        break missingId;
      }

      id = R.id.textViewOptions;
      TextView textViewOptions = ViewBindings.findChildViewById(rootView, id);
      if (textViewOptions == null) {
        break missingId;
      }

      id = R.id.tvItemAuthor;
      TextView tvItemAuthor = ViewBindings.findChildViewById(rootView, id);
      if (tvItemAuthor == null) {
        break missingId;
      }

      id = R.id.tvItemQuote;
      TextView tvItemQuote = ViewBindings.findChildViewById(rootView, id);
      if (tvItemQuote == null) {
        break missingId;
      }

      return new QuoteItemBinding((MaterialCardView) rootView, btnItemDelete, btnItemEdit,
          textViewOptions, tvItemAuthor, tvItemQuote);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
