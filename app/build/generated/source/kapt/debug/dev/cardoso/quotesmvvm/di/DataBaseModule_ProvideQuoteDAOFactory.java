// Generated by Dagger (https://dagger.dev).
package dev.cardoso.quotesmvvm.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.cardoso.quotesmvvm.data.local.QuoteDB;
import dev.cardoso.quotesmvvm.data.local.daos.QuoteDAO;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataBaseModule_ProvideQuoteDAOFactory implements Factory<QuoteDAO> {
  private final DataBaseModule module;

  private final Provider<QuoteDB> quoteDBProvider;

  public DataBaseModule_ProvideQuoteDAOFactory(DataBaseModule module,
      Provider<QuoteDB> quoteDBProvider) {
    this.module = module;
    this.quoteDBProvider = quoteDBProvider;
  }

  @Override
  public QuoteDAO get() {
    return provideQuoteDAO(module, quoteDBProvider.get());
  }

  public static DataBaseModule_ProvideQuoteDAOFactory create(DataBaseModule module,
      Provider<QuoteDB> quoteDBProvider) {
    return new DataBaseModule_ProvideQuoteDAOFactory(module, quoteDBProvider);
  }

  public static QuoteDAO provideQuoteDAO(DataBaseModule instance, QuoteDB quoteDB) {
    return Preconditions.checkNotNullFromProvides(instance.provideQuoteDAO(quoteDB));
  }
}
