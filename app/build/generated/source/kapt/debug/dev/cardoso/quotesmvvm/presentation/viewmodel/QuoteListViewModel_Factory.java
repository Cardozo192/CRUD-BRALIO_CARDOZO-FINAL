// Generated by Dagger (https://dagger.dev).
package dev.cardoso.quotesmvvm.presentation.viewmodel;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dev.cardoso.quotesmvvm.domain.usecase.DeleteQuoteUseCase;
import dev.cardoso.quotesmvvm.domain.usecase.GetQuotesUseCase;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class QuoteListViewModel_Factory implements Factory<QuoteListViewModel> {
  private final Provider<GetQuotesUseCase> getQuotesUseCaseProvider;

  private final Provider<DeleteQuoteUseCase> deleteQuoteUseCaseProvider;

  public QuoteListViewModel_Factory(Provider<GetQuotesUseCase> getQuotesUseCaseProvider,
      Provider<DeleteQuoteUseCase> deleteQuoteUseCaseProvider) {
    this.getQuotesUseCaseProvider = getQuotesUseCaseProvider;
    this.deleteQuoteUseCaseProvider = deleteQuoteUseCaseProvider;
  }

  @Override
  public QuoteListViewModel get() {
    return newInstance(getQuotesUseCaseProvider.get(), deleteQuoteUseCaseProvider.get());
  }

  public static QuoteListViewModel_Factory create(
      Provider<GetQuotesUseCase> getQuotesUseCaseProvider,
      Provider<DeleteQuoteUseCase> deleteQuoteUseCaseProvider) {
    return new QuoteListViewModel_Factory(getQuotesUseCaseProvider, deleteQuoteUseCaseProvider);
  }

  public static QuoteListViewModel newInstance(GetQuotesUseCase getQuotesUseCase,
      DeleteQuoteUseCase deleteQuoteUseCase) {
    return new QuoteListViewModel(getQuotesUseCase, deleteQuoteUseCase);
  }
}
