// Generated by Dagger (https://dagger.dev).
package dev.cardoso.quotesmvvm.domain.usecase;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dev.cardoso.quotesmvvm.data.local.daos.QuoteDAO;
import dev.cardoso.quotesmvvm.domain.QuoteRepository;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class EditQuoteUseCase_Factory implements Factory<EditQuoteUseCase> {
  private final Provider<QuoteDAO> quoteDAOProvider;

  private final Provider<QuoteRepository> quoteRepositoryImplProvider;

  public EditQuoteUseCase_Factory(Provider<QuoteDAO> quoteDAOProvider,
      Provider<QuoteRepository> quoteRepositoryImplProvider) {
    this.quoteDAOProvider = quoteDAOProvider;
    this.quoteRepositoryImplProvider = quoteRepositoryImplProvider;
  }

  @Override
  public EditQuoteUseCase get() {
    return newInstance(quoteDAOProvider.get(), quoteRepositoryImplProvider.get());
  }

  public static EditQuoteUseCase_Factory create(Provider<QuoteDAO> quoteDAOProvider,
      Provider<QuoteRepository> quoteRepositoryImplProvider) {
    return new EditQuoteUseCase_Factory(quoteDAOProvider, quoteRepositoryImplProvider);
  }

  public static EditQuoteUseCase newInstance(QuoteDAO quoteDAO,
      QuoteRepository quoteRepositoryImpl) {
    return new EditQuoteUseCase(quoteDAO, quoteRepositoryImpl);
  }
}
